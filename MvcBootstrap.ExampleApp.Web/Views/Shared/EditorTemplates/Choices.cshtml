@using MvcBootstrap.Util
@using MvcBootstrap.ViewModels
@using MvcBootstrap.Web.Mvc.Views
@using MvcBootstrap.Web.Mvc.Views.Extensions
@using TEMTDomain.StaticLib
@model IChoices<IEntityViewModel>

@{
    string name = Of<IEntityViewModel>.CodeNameFor(vm => vm.Id);
    string fullName = this.Html.ViewContext.ViewData.TemplateInfo.GetFullHtmlFieldName(name);
    string containerName = StringHelper.ConvertDotNotationToSpaceDelimited(this.Html.ViewContext.ViewData.TemplateInfo.HtmlFieldPrefix);
}

@if (Model == null)
{
    @ViewData.ModelMetadata.NullDisplayText
}
else 
{
    <text>
        <select name="@fullName" class="related-entity" multiple="multiple" data-placeholder="Select @containerName">
            <option>
                <!-- empty option -->
            </option>
            @foreach (var option in Model.Options)
            {
                <option 
                    value="@option.Id" 
                    @if (Model.Selections.Any(vm => vm.Id == option.Id))
                    {
                        <text>
                            selected="selected"
                        </text>
                    }>
                    @this.Bootstrap().ViewModelLabelFor(containerName, m => option)
                </option>
            }
        </select>
    </text>
}